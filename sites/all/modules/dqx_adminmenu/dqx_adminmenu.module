<?php


/**
 * Implements hook_permission()
 */
function dqx_adminmenu_permission() {
  return array(
    'use dqx_adminmenu' => array(
      'title' => 'Use DQX AdminMenu',
    ),
  );
}


/**
 * Implements hook_pageapi()
 *
 * One of the things we do here would cause premature theme initialization,
 * if called in hook_init(). So we use hook_pageapi() instead.
 */
function dqx_adminmenu_pageapi($api) {

  if (user_access('use dqx_adminmenu')) {

    $api->css('css/dqx_adminmenu.appearance.css');
    $api->css('css/dqx_adminmenu.dropdown.css');

    $api->js('js/dqx_adminmenu.js');
    $api->js('js/dqx_adminmenu.quickfind.js');
    $api->js('js/dqx_adminmenu.directional.js');

    $json_url = url('admin/dqx-adminmenu-data-json', array('query' => array(
      'timestamp' => variable_get('dqx_adminmenu_timestamp', 0),
      'uid' => $GLOBALS['user']->uid,
      'lang' => $GLOBALS['language']->language,
    )));

    $xml_url = url('admin/dqx-adminmenu-data-xml', array('query' => array(
      'timestamp' => variable_get('dqx_adminmenu_timestamp', 0),
      'uid' => $GLOBALS['user']->uid,
      'lang' => $GLOBALS['language']->language,
    )));

    $settings = array(
      'destination' => drupal_get_destination(),
      'json_url' => $json_url,
      'admin_url' => url('admin'),
      'language' => $GLOBALS['language']->language,
      'xml_url' => $xml_url,
      'base_url' => base_path(),
      'hidden_action_form' => drupal_render(drupal_get_form('dqx_adminmenu_hidden_action_form')),
    );

    $api->jsSetting('dqx_adminmenu', $settings);
  }
}


/**
 * Implements hook_perm()
 */
function dqx_adminmenu_perm() {
  return array(
    'use dqx_adminmenu',
  );
}


/**
 * Implements hook_menu()
 */
function dqx_adminmenu_menu() {
  $items = array();
  $items['admin/dqx-adminmenu-data-json'] = array(
    'access callback' => TRUE,
    'page callback' => 'dqx_adminmenu_json',
    'type' => MENU_CALLBACK,
    'file' => 'dqx_adminmenu.inc',
  );
  $items['admin/dqx-adminmenu-data-xml'] = array(
    'access callback' => TRUE,
    'page callback' => 'dqx_adminmenu_xml',
    'type' => MENU_CALLBACK,
    'file' => 'dqx_adminmenu.inc',
  );
  $items['admin/dqx-adminmenu/toggle-modules'] = array(
    'page callback' => 'dqx_adminmenu_toggle_modules',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
    'file' => 'dqx_adminmenu.actions.inc',
  );
  $items['admin/dqx-adminmenu/flush-cache'] = array(
    'page callback' => 'dqx_adminmenu_flush_cache',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
    'file' => 'dqx_adminmenu.actions.inc',
  );
  $items['admin/config/administration/dqx-adminmenu'] = array(
    'title' => 'DQX AdminMenu',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dqx_adminmenu_settings_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'dqx_adminmenu.admin.inc',
  );
  $items['admin/config/administration/dqx-adminmenu/settings'] = array(
    'title' => 'Settings',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -5,
  );
  $items['admin/config/administration/dqx-adminmenu/debug'] = array(
    'title' => 'Debug page',
    'page callback' => 'dqx_adminmenu_debug_page',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'dqx_adminmenu.debug.inc',
  );
  return $items;
}


/**
 * Implements hook_menu_alter()
 * We do not actually alter anything, we only trigger a cache reset.
 */
function dqx_adminmenu_menu_alter(&$items) {
  // set a timestamp for client-side cache
  variable_set('dqx_adminmenu_timestamp', time());
}


/**
 * A hidden form to provide CSRF protection for things like flush cache.
 */
function dqx_adminmenu_hidden_action_form($form, &$form_state) {
  $form = array();
  $form['#attributes']['style'] = 'display:none;';
  $form['action'] = array(
    '#type' => 'hidden',
  );
  // Our client-side scripts need to know the language prefixes and other things
  // that are added to links.
  $form['test_link'] = array(
    '#markup' => l('', 'admin', array('attributes' => array('id' => 'dqx_adminmenu-test-link'))),
  );
  $form['#submit'] = array('dqx_adminmenu_hidden_action_form_submit');
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );
  return $form;
}


/**
 * Submit handler for dqx_adminmenu_hidden_action_form
 */
function dqx_adminmenu_hidden_action_form_submit($form, &$form_state) {

  $path = $form_state['values']['action'];
  dqx_adminmenu_allow_actions(TRUE);
  if ($router_item = menu_get_item($path)) {
    if (!empty($router_item['access'])) {
      if (!empty($router_item['include_file'])) {
        require_once($router_item['include_file']);
      }
      call_user_func_array($router_item['page_callback'], $router_item['page_arguments']);
    }
  }
  else {
    drupal_set_message(t('DQX AdminMenu: Invalid action path "!action_path".', array('!action_path' => $path)));
  }
}


/**
 * Static memory, telling us if the request was a submission of
 * dqx_adminmenu_hidden_action_form.
 *
 * TODO:
 *   Probably the actions should not be router items at all.
 *   Then we would not need this static memory.
 */
function dqx_adminmenu_allow_actions($allow = NULL) {
  static $_allow;
  if (isset($allow)) {
    $_allow = $allow;
  }
  return $_allow;
}
