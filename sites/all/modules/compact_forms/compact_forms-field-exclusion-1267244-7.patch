diff --git a/compact_forms.admin.inc b/compact_forms.admin.inc
index 41f941d..98f8c2f 100644
--- a/compact_forms.admin.inc
+++ b/compact_forms.admin.inc
@@ -41,6 +41,15 @@ function compact_forms_admin_form($form, &$form_state) {
     '#description' => t("If not empty, the size of all text fields in compact forms will be set to the entered size."),
   );
 
+  $form['compact_forms_excluded_fields'] = array(
+    '#type' => 'textarea',
+    '#title' => t('Excluded Form Field CSS IDs'),
+    '#rows' => 3,
+    '#cols' => 40,
+    '#default_value' => variable_get('compact_forms_excluded_fields' , ''),
+    '#description' => t('Enter the Form Field CSS IDs of the fields to disable display compact. One per line.'),
+  );
+
   return system_settings_form($form);
 }
 
diff --git a/compact_forms.js b/compact_forms.js
index 72e87bb..fac36a1 100644
--- a/compact_forms.js
+++ b/compact_forms.js
@@ -20,6 +20,11 @@ $.fn.compactForm = function (stars) {
       if (!$field.length || !$field.is('input:text,input:password,textarea,input[type=email]')) {
         return;
       }
+
+      if (Drupal.settings.compactForms.blackList && jQuery.inArray($label.attr('for'), Drupal.settings.compactForms.blackList) != -1) {
+        return;
+      }
+
       // Store the initial field value, in case the browser is going to
       // automatically fill it in upon focus.
       var initial_value = $field.val();
diff --git a/compact_forms.module b/compact_forms.module
index 1a2e476..6bb063b 100644
--- a/compact_forms.module
+++ b/compact_forms.module
@@ -147,10 +147,13 @@ function _compact_forms_include_js($css_ids) {
   drupal_add_js($path . '/compact_forms.js');
   drupal_add_css($path . '/compact_forms.css');
 
+  $blacklist = preg_split("/\r\n|\n|\r/", variable_get('compact_forms_excluded_fields' , ''));
+
   $settings = array(
     'compactForms' => array(
       'forms' => $css_ids,
       'stars' => (int) variable_get('compact_forms_stars', 2),
+      'blackList' => $blacklist,
     ),
   );
   drupal_add_js($settings, 'setting');
